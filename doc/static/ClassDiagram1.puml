@startuml
'Dom√¶nemodellen giver nye entity klasser
'Pakker, model og util
!pragma layout smetana

class Main
class StartMenu
class MainMenu

class CreateAccount
class User
class DataValidator

Abstract Settings

class Laundry
class Market
class Wardrobe
class ErrorHandling
class Category

class CreateUserSettings
class NotificationSettings

Abstract Clothing
class Pants
class Shirt
class Shoes
class Socks
class Underwear
class Suits

package "util"{
       class TextUI
       class DbIO
       }
Main *-- StartMenu
StartMenu *-- MainMenu
MainMenu *-- Settings
MainMenu *-- Laundry
MainMenu *-- Market
MainMenu *-- Wardrobe
MainMenu *-- ErrorHandling
Wardrobe *-- Category

User *-- DataValidator
CreateAccount <-- DataValidator
User *-- CreateAccount
Settings *-- CreateUserSettings
Settings *-- NotificationSettings
Wardrobe *-- Clothing
Clothing *-- Shoes
Clothing *-- Shirt
Clothing *-- Pants
Clothing *-- Socks
Clothing *-- Underwear
Clothing *-- Suits

StartMenu *-- util
StartMenu *-- User

StartMenu : + login()
StartMenu : + createUser()

MainMenu : + Wardrobe
MainMenu : + Laundry
MainMenu : + Market
MainMenu : + Settings
MainMenu : + ErrorHandling

Clothing : + int clothing_id
Clothing : + int user_id
Clothing : + String color
Clothing : + String brand
Clothing : + String clothingType
Clothing : + String seasons
Clothing : + String size
Clothing : + String material
Clothing : + String info
Clothing : - Clothing

ClothingListing : + Private User seller
ClothingListing : + Private Clothing clothingItem
ClothingListing : + Private double price
ClothingListing : - ClothingListing
ClothingListing : + markAsSold(List<ClothingListing>listings)

Shoes : + String typeOfShoes

Shirt : + String sleevesLength
Shirt : + String neck
Shirt : + String typeOfShirt

Suits : + String typeOfSuit

Pants : + boolean pockets
Pants : + String typeOfPants

Socks : + String type

Underwear : + String type

Market : + sellClothing()
Market : + buyClothing()
Market : + donateClothing()
Market : + borrowClothing()
Market : + addToBuyHistory()
Market : + addToSellHistory()
Market : + chatWindow()
Market : + savedListing()

Wardrobe : + createOutfit()
Wardrobe : + generateOutfit()
Wardrobe : + showPrewornOutfits()
Wardrobe : + addOutfitToFavorite()
Wardrobe : + addClothingToWardrobe()
Wardrobe : + removeClothingFromWardrobe()
Wardrobe : + addClothingToLaundry()

Settings : + createUserSettings()
Settings : + notificationSettings()
Settings : + logOut()
Settings : + EULA()

Laundry : + view()
Laundry : + empty()
Laundry : + removeFromBasket()


Main : + static void main(string [] args)

User : - String username
User : - String password
User : - static ArrayList <User> users


User : + User(String Username, String Password)


DataValidator : + Boolean isUsernameValid()
DataValidator : + Boolean isPassWordValid()
DataValidator : + Boolean isEmailValid()
'-----------

CreateAccount : + TextUI
CreateAccount : + DBIO
CreateAccount : - void createUser(String name, String Password)


'---_new-----
DbIO : + DbIO
DbIO : + TextUI
DbIO : + String url
DbIO : + String user
DbIO : + String password
DbIO : + Arraylist<User> readUserData(String path)
DbIO : + void saveUserData(ArrayList<User> users)
DbIO : + String[] readLoginData(String Username, String password)
DbIO : + Connection getConnection()
DbIO : + void saveOutfit(Connection connection, int user_id, List<Clothing>outfitItems)
DbIO : + void saveOutfitToFavorite(Connection connection, int user_id, List<Clothing>outfitItems)
DbIO : + void showClothes(Connection connection, String clothingType)
DbIO : + Clothing getClothingById(Connection connection, int clothing_id)
DbIO : + static User readUserData(Connection connection, String username)
DbIO : + static void saveUserData(Connection connection, User user)
DbIO : + static int getUserId(Connection connection, String username, String password)
DbIO : + void saveClothingToDatabase(Connection connection, Clothing clothing)
DbIO : + void removeClothingFromDatabase(Connection connection,
'-----------

TextUI : + String getInput(String msg)
TextUI : - Scanner scanner
TextUI : + void displayMessage(String msg)

@enduml