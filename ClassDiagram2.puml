@startuml
!pragma layout smetana

class Socks {
~ String typeOfSock
+ String getTypeOfSock()
}
class Underwear {
~ String typeOfUnderwear
+ String getTypeOfUnderwear()
}
class ErrorHandling {
}

class DataValidator {
+ {static} boolean isUsernameValid(String)
+ {static} boolean isPasswordValid(String)
+ {static} boolean isEmailValid(String)
}
class Main {
+ {static} void main(String[])
}
class CreateAccount {
- {static} TextUI ui
- {static} DbIO io
- {static} User newUser
+ {static} User createUser()
+ {static} void getInfoFromUser()
- {static} List<Underwear> initializeUnderwearList(int)
- {static} void simulateDaysPassing(List<Underwear>,int,int,int)
- {static} UnderwearSettings getUnderwearSettings(int)
- {static} void saveUnderwearSettings(int,int,int)
- {static} void updateUnderwearUsage(int)
- {static} int getUserId(String,String)
- {static} int getIntInput()
}
class User {
- int id
- String username
- String password
- String email
- int user_id
+ Wardrobe wardrobe
- int underwearUsage
- int totalUnderwear
~ {static} ArrayList<User> users
- List<Clothing> clothingItems
+ int getId()
- void setId(int)
+ int getUser_id()
+ void setUser_id(int)
+ String getUsername()
+ void setUsername(String)
+ String getPassword()
+ void setPassword(String)
+ String getEmail()
+ {static} ArrayList<User> getUsers()
+ List<Clothing> getClothingItems()
+ {static} void addUser(User)
+ String toString()
+ void setUnderwearUsage(int)
+ void setTotalUnderwear(int)
}
class MarketPlace {
- {static} TextUI ui
- {static} String URL
- {static} String USER
- {static} String PASSWORD
- List<ClothingListing> listings
- {static} boolean testing
- MainMenu menu
+ {static} void main(String[])
+ {static} Connection getConnection()
- {static} void printListing(ClothingListing)
- void listAvailableClothingItems()
- void sellListing()
- void saveClothing(Clothing)
- void saveListing(ClothingListing)
- void buyClothingItem()
- int displayMenu()
- void handleUserChoice()
}
abstract class Settings {
- {static} User loggedInUser
- {static} TextUI ui
- {static} DbIO io
+ {static} void changeUserSettings()
+ {static} void createUserSettings()
+ {static} void notificationSettings()
+ {static} void logOut()
+ {static} void EULA()
}
class Pants {
~ TextUI ui
~ String typeOfPants
~ String pockets
+ String getTypeOfPants()
+ String getPockets()
+ Pants createPants(Scanner)
}
class StartMenu {
+ void login()
+ void createUser()
}
class ConcreteClothing {
}
class Dress {
~ TextUI ui
~ String typeOfDress
~ String dressLength
+ String getTypeOfDress()
+ String getDressLength()
+ Dress createDress(Scanner)
}
class UnderwearSettings {
- int underwearUsage
- int totalUnderwear
+ int getUnderwearUsage()
+ int getTotalUnderwear()
}
class Laundry {
- Connection connection
- TextUI ui
~ String url
~ String username
~ String password
- void readDirtyClothesFromDatabase()
}
class MainMenu {
+ {static} User loggedInUser
- {static} TextUI ui
- {static} DbIO io
+ {static} CreateAccount ca
+ User setup()
+ void menu()
+ void settingsMenu()
+ void Wardrobe()
+ User login()
}
class Shoes {
~ TextUI ui
- String typeOfShoes
+ String getTypeOfShoes()
+ Shoes createShoes(Scanner)
}
class NotificationSettings {
}
class ClothingListing {
- int id
- User seller
- String description
- Clothing clothingItem
- double price
+ String getDescription()
+ int getId()
+ void setId(int)
+ User getSeller()
+ Clothing getClothingItem()
+ double getPrice()
+ String toString()
}

class Shorts {
~ TextUI ui
~ String typeOfShorts
+ String getTypeOfShorts()
+ Shorts createShorts(Scanner)
}

package "util"{
class TextUI {
- Scanner scan
+ String getInput(String)
+ void displayMessage(String)
}
class DbIO {
~ TextUI ui
- {static} String URL
- {static} String USER
- {static} String PASSWORD
+ {static} Connection getConnection()
+ void saveOutfit(Connection,int,List<Clothing>)
+ void saveOutfitToFavorite(Connection,int,List<Clothing>)
+ void showClothes(Connection,String)
+ void showAllClothes(Connection)
+ Clothing getClothingById(Connection,int)
+ {static} User readUserData(Connection,String)
+ {static} void saveUserData(Connection,User)
+ {static} int getUserId(Connection,String,String)
+ {static} void updatePassword(Connection,String,String)
+ {static} void updateEmail(Connection,String,String)
+ void saveClothingToDatabase(Connection,Clothing)
+ void removeClothingFromDatabase(Connection,int)
}


}
class Suits {
~ TextUI ui
~ String typeOfSuit
+ String getTypeOfSuit()
+ Suits createSuit(Scanner)
}
class Shirt {
~ TextUI ui
~ String sleeveLength
~ String neck
~ String typeOfShirt
+ String getSleeveLength()
+ String getNeck()
+ String getTypeOfShirt()
+ Shirt createShirt(Scanner)
}
class Wardrobe {
- User currentUser
~ Shirt shirt
~ Pants pants
~ Dress dress
~ Shoes shoes
~ Suits suits
~ Shorts shorts
~ TextUI ui
~ DbIO io
- int user_id
+ Outfit createOutfit()
- void outfitOptions(Scanner,Connection,List<Clothing>)
+ void generateOutfit()
+ void showPrewornOutfits()
+ void addClothingToWardrobe(Connection)
+ void removeClothingFromWardrobe(Connection)
+ void addClothingToLaundry()
}
class UserManager {
- {static} TextUI ui
- {static} DbIO io
+ {static} void changeUserSettings()
+ {static} void updatePasswordWithConfirmation(Connection,String)
+ {static} void updateEmailWithConfirmation(Connection,String)
- {static} boolean confirmUpdate(String)
}
class CreateUserSettings {
}
abstract class Clothing {
- {static} int nextId
- int id
- String name
- int clothing_id
- String color
- String brand
- String clothingType
- String seasons
- String size
- String material
- String info
- int user_id
+ int getId()
- void setId(int)
+ String getName()
+ void setName(String)
+ String getColor()
+ String getBrand()
+ String getClothingType()
+ String getSeasons()
+ String getSize()
+ String getMaterial()
+ String getInfo()
+ int getClothing_id()
+ void setClothing_id(int)
+ void setUser_id(int)
}
class DatabaseConnectionTest {
+ {static} void main(String[])
}
class Outfit {
- List<Clothing> outfitItems
+ List<Clothing> getItems()
}

Main *-- StartMenu
StartMenu *-- User
StartMenu *-- util
User *-- CreateAccount
CreateAccount *-- DataValidator
StartMenu *-- MainMenu
MainMenu *-- ErrorHandling
MainMenu *-- Wardrobe
MainMenu *-- MarketPlace
MainMenu *-- Laundry
MainMenu *-- Settings
Wardrobe *-- Clothing
Wardrobe *-- Category
Wardrobe *-- Outfit
Settings *-- UserManager
MarketPlace *-- DatabaseConnectionTest
CreateAccount *-- UnderwearSettings
MarketPlace *-- ClothingListing

Clothing <|-- Socks
Clothing <|-- Underwear
Clothing <|-- Pants
Clothing <|-- ConcreteClothing
Clothing <|-- Dress
Clothing <|-- Shoes
Settings <|-- NotificationSettings
Clothing <|-- Shorts
Clothing <|-- Suits
Clothing <|-- Shirt
Settings <|-- CreateUserSettings
@enduml